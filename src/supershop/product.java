/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supershop;

import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Shawon
 */
public class product extends javax.swing.JFrame {
    
   

    /**
     * Creates new form product
     */
    public product() {
        initComponents();
        
                item_show.removeAll();
                item_show.add(new_add);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.newlyaddContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)homeTable.getModel();
        //DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
      //  centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        homeTable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
 
          //  rowData[5] = list.get(i).getSupp_company();
          //  rowData[6] = list.get(i).getDescription();
           // ImageIcon image = new ImageIcon(list.get(i).getimage());
           // Image im = image.getImage();
           // Image myImg = im.getScaledInstance(150, 150, Image.SCALE_SMOOTH);
           // ImageIcon newImage = new ImageIcon(myImg);
            
///=Image resizedImage = ii.getImage();
           // ii = new ImageIcon(resizedImage.getScaledInstance(160, 160, Image.SCALE_SMOOTH));
            
         //   rowData[3] = newImage;
            model.addRow(rowData);
            homeTable.setRowHeight(50);
            homeTable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        gro_but = new javax.swing.JButton();
        fru_veg_but = new javax.swing.JButton();
        fi_me_but = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        toi_but = new javax.swing.JButton();
        kid_but = new javax.swing.JButton();
        add_but = new javax.swing.JButton();
        offer_but = new javax.swing.JButton();
        cos_but = new javax.swing.JButton();
        Other_but = new javax.swing.JButton();
        item_show = new javax.swing.JPanel();
        groceries = new javax.swing.JPanel();
        groTablescrollpane = new javax.swing.JScrollPane();
        grotable = new javax.swing.JTable();
        new_add = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        homeTable = new javax.swing.JTable();
        offer = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        offerTable = new javax.swing.JTable();
        fru_veg = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        fru_vegTable = new javax.swing.JTable();
        Fi_me = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        Fi_meTable = new javax.swing.JTable();
        troiletries = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        trolTable = new javax.swing.JTable();
        Kids = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        kidstable = new javax.swing.JTable();
        Cosmetics = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        cosmeticstable = new javax.swing.JTable();
        Others = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        otherstable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(97, 212, 195));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/product_logo_icon.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 11, -1, -1));

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 20)); // NOI18N
        jLabel2.setText("  Welcome  to  Collective Mart  Shopping");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 19, 511, 39));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search-ico.png"))); // NOI18N
        jButton1.setPreferredSize(new java.awt.Dimension(40, 40));
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, -1, -1));

        jTextField1.setText("Search anything");
        jTextField1.setPreferredSize(new java.awt.Dimension(210, 40));
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, -1, -1));

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1013, 71);

        jPanel2.setBackground(new java.awt.Color(0, 150, 120));

        gro_but.setBackground(new java.awt.Color(0, 150, 120));
        gro_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        gro_but.setText("Groceries");
        gro_but.setBorder(null);
        gro_but.setPreferredSize(new java.awt.Dimension(80, 30));
        gro_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gro_butActionPerformed(evt);
            }
        });

        fru_veg_but.setBackground(new java.awt.Color(0, 150, 120));
        fru_veg_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        fru_veg_but.setText("Fruits/Vegetables");
        fru_veg_but.setBorder(null);
        fru_veg_but.setPreferredSize(new java.awt.Dimension(135, 30));
        fru_veg_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fru_veg_butActionPerformed(evt);
            }
        });

        fi_me_but.setBackground(new java.awt.Color(0, 150, 120));
        fi_me_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        fi_me_but.setText("Fish/meat ");
        fi_me_but.setBorder(null);
        fi_me_but.setPreferredSize(new java.awt.Dimension(110, 30));
        fi_me_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fi_me_butActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/cart.jpg"))); // NOI18N
        jButton9.setPreferredSize(new java.awt.Dimension(35, 30));

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/face_ico.png"))); // NOI18N
        jButton10.setPreferredSize(new java.awt.Dimension(30, 30));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        toi_but.setBackground(new java.awt.Color(0, 150, 120));
        toi_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        toi_but.setText("Toiletries");
        toi_but.setBorder(null);
        toi_but.setPreferredSize(new java.awt.Dimension(95, 30));
        toi_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toi_butActionPerformed(evt);
            }
        });

        kid_but.setBackground(new java.awt.Color(0, 150, 120));
        kid_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        kid_but.setText("Kid's Corner");
        kid_but.setBorder(null);
        kid_but.setPreferredSize(new java.awt.Dimension(120, 30));
        kid_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kid_butActionPerformed(evt);
            }
        });

        add_but.setBackground(new java.awt.Color(0, 150, 120));
        add_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        add_but.setText("Newly added");
        add_but.setBorder(null);
        add_but.setPreferredSize(new java.awt.Dimension(115, 30));
        add_but.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_butMouseClicked(evt);
            }
        });
        add_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_butActionPerformed(evt);
            }
        });

        offer_but.setBackground(new java.awt.Color(0, 150, 120));
        offer_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        offer_but.setText("Offered item");
        offer_but.setBorder(null);
        offer_but.setPreferredSize(new java.awt.Dimension(105, 30));
        offer_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offer_butActionPerformed(evt);
            }
        });

        cos_but.setBackground(new java.awt.Color(0, 150, 120));
        cos_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        cos_but.setText("Cosmetics");
        cos_but.setBorder(null);
        cos_but.setPreferredSize(new java.awt.Dimension(120, 30));
        cos_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cos_butActionPerformed(evt);
            }
        });

        Other_but.setBackground(new java.awt.Color(0, 150, 120));
        Other_but.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        Other_but.setText("Others");
        Other_but.setBorder(null);
        Other_but.setPreferredSize(new java.awt.Dimension(120, 30));
        Other_but.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Other_butActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(add_but, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(offer_but, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gro_but, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fru_veg_but, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fi_me_but, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toi_but, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kid_but, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cos_but, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Other_but, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fru_veg_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gro_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fi_me_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toi_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kid_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offer_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cos_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Other_but, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 70, 1000, 50);

        item_show.setLayout(new java.awt.CardLayout());

        groTablescrollpane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groTablescrollpaneMouseClicked(evt);
            }
        });

        grotable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        grotable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductName", "Price", "Vat","SupplierCompany","SellerName"
            }
        ){
            Class[] shawon = new Class[]
            {
                java.lang.String.class,
                java.lang.Double.class,
                java.lang.Double.class,
                java.lang.String.class,
                java.lang.String.class
            };
            boolean[] canchange = new boolean []{
                false,
                false,
                false,
                false,
                false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canchange [columnIndex];
            }
            public Class getColumnClass(int columnIndex){
                return shawon [columnIndex];
            }
        }
    );
    grotable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    grotable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    grotable.getTableHeader().setReorderingAllowed(false);
    grotable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            grotableMouseClicked(evt);
        }
    });
    groTablescrollpane.setViewportView(grotable);

    javax.swing.GroupLayout groceriesLayout = new javax.swing.GroupLayout(groceries);
    groceries.setLayout(groceriesLayout);
    groceriesLayout.setHorizontalGroup(
        groceriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(groTablescrollpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    groceriesLayout.setVerticalGroup(
        groceriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(groTablescrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(groceries, "card4");

    homeTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    homeTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            homeTableMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(homeTable);

    javax.swing.GroupLayout new_addLayout = new javax.swing.GroupLayout(new_add);
    new_add.setLayout(new_addLayout);
    new_addLayout.setHorizontalGroup(
        new_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    new_addLayout.setVerticalGroup(
        new_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(new_add, "card2");

    jScrollPane6.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane6MouseClicked(evt);
        }
    });

    offerTable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    offerTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Brand Name", "Model", "Price", "Stock", "Features", "Photo"
        }
    ) {
        Class[] types = new Class[]{
            java.lang.String.class, java.lang.String.class, java.lang.Integer.class,
            java.lang.Integer.class, java.lang.String.class, javax.swing.Icon.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }

        public Class getColumnClass(int columnIndex){
            return types [columnIndex];
        }

    });
    offerTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    offerTable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    offerTable.getTableHeader().setReorderingAllowed(false);
    offerTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            offerTableMouseClicked(evt);
        }
    });
    jScrollPane6.setViewportView(offerTable);

    javax.swing.GroupLayout offerLayout = new javax.swing.GroupLayout(offer);
    offer.setLayout(offerLayout);
    offerLayout.setHorizontalGroup(
        offerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    offerLayout.setVerticalGroup(
        offerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(offer, "card3");

    jScrollPane7.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane7MouseClicked(evt);
        }
    });

    fru_vegTable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    fru_vegTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    fru_vegTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    fru_vegTable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    fru_vegTable.getTableHeader().setReorderingAllowed(false);
    fru_vegTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            fru_vegTableMouseClicked(evt);
        }
    });
    jScrollPane7.setViewportView(fru_vegTable);

    javax.swing.GroupLayout fru_vegLayout = new javax.swing.GroupLayout(fru_veg);
    fru_veg.setLayout(fru_vegLayout);
    fru_vegLayout.setHorizontalGroup(
        fru_vegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    fru_vegLayout.setVerticalGroup(
        fru_vegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(fru_veg, "card5");

    jScrollPane8.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane8MouseClicked(evt);
        }
    });

    Fi_meTable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    Fi_meTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    Fi_meTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    Fi_meTable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    Fi_meTable.getTableHeader().setReorderingAllowed(false);
    Fi_meTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            Fi_meTableMouseClicked(evt);
        }
    });
    jScrollPane8.setViewportView(Fi_meTable);

    javax.swing.GroupLayout Fi_meLayout = new javax.swing.GroupLayout(Fi_me);
    Fi_me.setLayout(Fi_meLayout);
    Fi_meLayout.setHorizontalGroup(
        Fi_meLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    Fi_meLayout.setVerticalGroup(
        Fi_meLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(Fi_me, "card5");

    jScrollPane9.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane9MouseClicked(evt);
        }
    });

    trolTable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    trolTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    trolTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    trolTable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    trolTable.getTableHeader().setReorderingAllowed(false);
    trolTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            trolTableMouseClicked(evt);
        }
    });
    jScrollPane9.setViewportView(trolTable);

    javax.swing.GroupLayout troiletriesLayout = new javax.swing.GroupLayout(troiletries);
    troiletries.setLayout(troiletriesLayout);
    troiletriesLayout.setHorizontalGroup(
        troiletriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    troiletriesLayout.setVerticalGroup(
        troiletriesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(troiletries, "card5");

    jScrollPane10.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane10MouseClicked(evt);
        }
    });

    kidstable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    kidstable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    kidstable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    kidstable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    kidstable.getTableHeader().setReorderingAllowed(false);
    kidstable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            kidstableMouseClicked(evt);
        }
    });
    jScrollPane10.setViewportView(kidstable);

    javax.swing.GroupLayout KidsLayout = new javax.swing.GroupLayout(Kids);
    Kids.setLayout(KidsLayout);
    KidsLayout.setHorizontalGroup(
        KidsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    KidsLayout.setVerticalGroup(
        KidsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(Kids, "card4");

    jScrollPane11.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane11MouseClicked(evt);
        }
    });

    cosmeticstable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    cosmeticstable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    cosmeticstable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    cosmeticstable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    cosmeticstable.getTableHeader().setReorderingAllowed(false);
    cosmeticstable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            cosmeticstableMouseClicked(evt);
        }
    });
    jScrollPane11.setViewportView(cosmeticstable);

    javax.swing.GroupLayout CosmeticsLayout = new javax.swing.GroupLayout(Cosmetics);
    Cosmetics.setLayout(CosmeticsLayout);
    CosmeticsLayout.setHorizontalGroup(
        CosmeticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    CosmeticsLayout.setVerticalGroup(
        CosmeticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(Cosmetics, "card4");

    jScrollPane12.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jScrollPane12MouseClicked(evt);
        }
    });

    otherstable.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
    otherstable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ProductName", "Price", "Vat","SupplierCompany","SellerName"
        }
    ){
        Class[] shawon = new Class[]
        {
            java.lang.String.class,
            java.lang.Double.class,
            java.lang.Double.class,
            java.lang.String.class,
            java.lang.String.class
        };
        boolean[] canchange = new boolean []{
            false,
            false,
            false,
            false,
            false
        };
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canchange [columnIndex];
        }
        public Class getColumnClass(int columnIndex){
            return shawon [columnIndex];
        }
    }
    );
    otherstable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    otherstable.setSelectionBackground(new java.awt.Color(0, 150, 136));
    otherstable.getTableHeader().setReorderingAllowed(false);
    otherstable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            otherstableMouseClicked(evt);
        }
    });
    jScrollPane12.setViewportView(otherstable);

    javax.swing.GroupLayout OthersLayout = new javax.swing.GroupLayout(Others);
    Others.setLayout(OthersLayout);
    OthersLayout.setHorizontalGroup(
        OthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
    );
    OthersLayout.setVerticalGroup(
        OthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
    );

    item_show.add(Others, "card4");

    getContentPane().add(item_show);
    item_show.setBounds(0, 120, 1000, 440);

    setSize(new java.awt.Dimension(1016, 599));
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        jTextField1.setText("");
    }//GEN-LAST:event_jTextField1MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
         new SignIn_up().setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void add_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_butActionPerformed
                   item_show.removeAll();
                item_show.add(new_add);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.newlyaddContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)homeTable.getModel();
        //DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
      //  centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        homeTable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
 
          //  rowData[5] = list.get(i).getSupp_company();
          //  rowData[6] = list.get(i).getDescription();
           // ImageIcon image = new ImageIcon(list.get(i).getimage());
           // Image im = image.getImage();
           // Image myImg = im.getScaledInstance(150, 150, Image.SCALE_SMOOTH);
           // ImageIcon newImage = new ImageIcon(myImg);
            
///=Image resizedImage = ii.getImage();
           // ii = new ImageIcon(resizedImage.getScaledInstance(160, 160, Image.SCALE_SMOOTH));
            
         //   rowData[3] = newImage;
            model.addRow(rowData);
            homeTable.setRowHeight(50);
            homeTable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
    }//GEN-LAST:event_add_butActionPerformed

    private void offer_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offer_butActionPerformed
                
                   item_show.removeAll();
                item_show.add(new_add);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.newlyaddContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)homeTable.getModel();
        //DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
      //  centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        homeTable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        homeTable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
 
            model.addRow(rowData);
            homeTable.setRowHeight(50);
            homeTable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
    }//GEN-LAST:event_offer_butActionPerformed

    private void offerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_offerTableMouseClicked
         pi.setVisible(true);
        pi.pack();
        int selectedRow = offerTable.getSelectedRow();
        TableModel tm = offerTable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_offerTableMouseClicked

    private void fru_vegTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fru_vegTableMouseClicked
        pi.setVisible(true);
        pi.pack();
        int selectedRow = fru_vegTable.getSelectedRow();
        TableModel tm = fru_vegTable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_fru_vegTableMouseClicked

    private void Fi_meTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Fi_meTableMouseClicked
       pi.setVisible(true);
        pi.pack();
        int selectedRow = Fi_meTable.getSelectedRow();
        TableModel tm = Fi_meTable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_Fi_meTableMouseClicked

    private void trolTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_trolTableMouseClicked
         pi.setVisible(true);
        pi.pack();
        int selectedRow = trolTable.getSelectedRow();
        TableModel tm = trolTable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_trolTableMouseClicked

    private void kidstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kidstableMouseClicked
         pi.setVisible(true);
        pi.pack();
        int selectedRow = kidstable.getSelectedRow();
        TableModel tm = kidstable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_kidstableMouseClicked

    private void grotableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grotableMouseClicked
            pi.setVisible(true);
        pi.pack();
        int selectedRow = grotable.getSelectedRow();
        TableModel tm = grotable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_grotableMouseClicked
    product_details pi = new product_details();
    private void add_butMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_butMouseClicked
        
    }//GEN-LAST:event_add_butMouseClicked

    private void homeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeTableMouseClicked
        pi.setVisible(true);
        pi.pack();
        int selectedRow = homeTable.getSelectedRow();
        TableModel tm = homeTable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_homeTableMouseClicked

    private void gro_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gro_butActionPerformed
                item_show.removeAll();
                item_show.add(groceries);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.groceriesContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)grotable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        grotable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        grotable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        grotable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        grotable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        grotable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            grotable.setRowHeight(50);
            grotable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }

        
    }//GEN-LAST:event_gro_butActionPerformed

    private void fru_veg_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fru_veg_butActionPerformed
        
         item_show.removeAll();
                item_show.add(fru_veg);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.fru_vegContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)fru_vegTable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        fru_vegTable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        fru_vegTable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        fru_vegTable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        fru_vegTable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        fru_vegTable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            fru_vegTable.setRowHeight(50);
            fru_vegTable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }

        
        
        
    }//GEN-LAST:event_fru_veg_butActionPerformed

    private void fi_me_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fi_me_butActionPerformed
        
         item_show.removeAll();
                item_show.add(Fi_me);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.fi_meContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)Fi_meTable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        Fi_meTable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        Fi_meTable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        Fi_meTable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        Fi_meTable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        Fi_meTable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            Fi_meTable.setRowHeight(50);
            Fi_meTable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }

        
        
    }//GEN-LAST:event_fi_me_butActionPerformed

    private void toi_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toi_butActionPerformed
       
                item_show.removeAll();
                item_show.add(troiletries);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.ToiletriesContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)trolTable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        trolTable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        trolTable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        trolTable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        trolTable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        trolTable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            trolTable.setRowHeight(50);
            trolTable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
 
        
    }//GEN-LAST:event_toi_butActionPerformed

    private void kid_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kid_butActionPerformed
                item_show.removeAll();
                item_show.add(Kids);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.KidsContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)kidstable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        kidstable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        kidstable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        kidstable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        kidstable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        kidstable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            kidstable.setRowHeight(50);
            kidstable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
 
        
    }//GEN-LAST:event_kid_butActionPerformed

    private void cos_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cos_butActionPerformed
                  item_show.removeAll();
                item_show.add(Cosmetics);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.cosmeticsContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)cosmeticstable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        cosmeticstable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        cosmeticstable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        cosmeticstable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        cosmeticstable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        cosmeticstable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            kidstable.setRowHeight(50);
            kidstable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
 
        
    }//GEN-LAST:event_cos_butActionPerformed

    private void Other_butActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Other_butActionPerformed
                item_show.removeAll();
                item_show.add(Others);
                item_show.repaint();
                item_show.revalidate();
                
         ArrayList<product_list> list;
         list = Table_database.othersContent();
        Object rowData[] = new Object[5];
        
        DefaultTableModel model =  (DefaultTableModel)otherstable.getModel();
        DefaultTableCellRenderer LeftRenderer = new DefaultTableCellRenderer();
        LeftRenderer.setHorizontalAlignment( JLabel.LEFT);
        
        otherstable.getColumnModel().getColumn(0).setCellRenderer( LeftRenderer );
        otherstable.getColumnModel().getColumn(1).setCellRenderer( LeftRenderer );
        otherstable.getColumnModel().getColumn(2).setCellRenderer( LeftRenderer );
        otherstable.getColumnModel().getColumn(3).setCellRenderer( LeftRenderer );
        otherstable.getColumnModel().getColumn(4).setCellRenderer( LeftRenderer );
   //     homeTable.getColumnModel().getColumn(5).setCellRenderer( centerRenderer );
   //     homeTable.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
        

       
        model.setRowCount(0); //To clear mobileTable
        
        for(int i=0; i<list.size(); i++){
            rowData[0] = list.get(i).getName();
            rowData[1] = list.get(i).getVat();
            rowData[2] = list.get(i).getprice();
            rowData[3] = list.get(i).getsupplier_company();
            rowData[4] = list.get(i).getseller_name();
            model.addRow(rowData);
            otherstable.setRowHeight(50);
            otherstable.getColumnModel().getColumn(4).setPreferredWidth(196);
        }
 
        
    }//GEN-LAST:event_Other_butActionPerformed

    private void cosmeticstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cosmeticstableMouseClicked
         pi.setVisible(true);
        pi.pack();
        int selectedRow = cosmeticstable.getSelectedRow();
        TableModel tm = cosmeticstable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_cosmeticstableMouseClicked

    private void otherstableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_otherstableMouseClicked
        pi.setVisible(true);
        pi.pack();
        int selectedRow = otherstable.getSelectedRow();
        TableModel tm = otherstable.getModel();
        
        String name = tm.getValueAt(selectedRow, 0).toString();
        //String catagory = tm.getValueAt(selectedRow, 1).toString();
       // String vat = tm.getValueAt(selectedRow, 2).toString();
       // String o_price = tm.getValueAt(selectedRow, 3).toString();
       // String p_price = tm.getValueAt(selectedRow, 4).toString();
       // System.out.println(name);
          try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=supershop;integratedSecurity=true");
              System.out.println(name);
       //     Statement statement = connection.createStatement();
       //     Connection con = DriverManager.getConnection("jdbc:sqlite:DBs/electronicsDB.db");
            PreparedStatement ps = con.prepareStatement("SELECT P_name, catagory, vat, price, supplier_company, description , offertype, Discount FROM product WHERE P_name = 'name' ");
            ResultSet rs = ps.executeQuery();
             while(rs.next()){
                
                 // rs.getString("EmployeeID")
                          //System.out.println("P_name");
                         // System.out.println("catagory");
                  pi.name_lvl.setText(rs.getString("P_name"));
                  pi.cat_lvl.setText(rs.getString("catagory"));
                   pi.com_lvl.setText(rs.getString("supplier_company"));
                  pi.vat_lvl.setText(rs.getString("vat"));
                  pi.discount_lvl.setText(rs.getString("Discount"));
                  pi.price_lvl.setText(rs.getString("price"));
                  pi.offer_lvl.setText(rs.getString("offertype"));               
                  pi.des_area.append(rs.getString("description"));
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_otherstableMouseClicked

    private void jScrollPane6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane6MouseClicked
             
    }//GEN-LAST:event_jScrollPane6MouseClicked

    private void groTablescrollpaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groTablescrollpaneMouseClicked
          
    }//GEN-LAST:event_groTablescrollpaneMouseClicked

    private void jScrollPane7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane7MouseClicked
           
    }//GEN-LAST:event_jScrollPane7MouseClicked

    private void jScrollPane8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane8MouseClicked
          
    }//GEN-LAST:event_jScrollPane8MouseClicked

    private void jScrollPane9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane9MouseClicked
           
    }//GEN-LAST:event_jScrollPane9MouseClicked

    private void jScrollPane10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane10MouseClicked
   
    }//GEN-LAST:event_jScrollPane10MouseClicked

    private void jScrollPane11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane11MouseClicked
     
    }//GEN-LAST:event_jScrollPane11MouseClicked

    private void jScrollPane12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane12MouseClicked
    
    }//GEN-LAST:event_jScrollPane12MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Cosmetics;
    private javax.swing.JPanel Fi_me;
    private javax.swing.JTable Fi_meTable;
    private javax.swing.JPanel Kids;
    private javax.swing.JButton Other_but;
    private javax.swing.JPanel Others;
    private javax.swing.JButton add_but;
    private javax.swing.JButton cos_but;
    private javax.swing.JTable cosmeticstable;
    private javax.swing.JButton fi_me_but;
    private javax.swing.JPanel fru_veg;
    private javax.swing.JTable fru_vegTable;
    private javax.swing.JButton fru_veg_but;
    private javax.swing.JScrollPane groTablescrollpane;
    private javax.swing.JButton gro_but;
    private javax.swing.JPanel groceries;
    private javax.swing.JTable grotable;
    private javax.swing.JTable homeTable;
    private javax.swing.JPanel item_show;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton kid_but;
    private javax.swing.JTable kidstable;
    private javax.swing.JPanel new_add;
    private javax.swing.JPanel offer;
    private javax.swing.JTable offerTable;
    private javax.swing.JButton offer_but;
    private javax.swing.JTable otherstable;
    private javax.swing.JButton toi_but;
    private javax.swing.JPanel troiletries;
    private javax.swing.JTable trolTable;
    // End of variables declaration//GEN-END:variables
}
